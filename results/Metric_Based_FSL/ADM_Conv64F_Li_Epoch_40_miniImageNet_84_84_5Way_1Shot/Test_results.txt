========================================== Start Test ==========================================

=> loading checkpoint './results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/model_best.pth.tar'
=> loaded checkpoint './results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/model_best.pth.tar' (epoch 34)
========================================== Start Test ==========================================

=> loading checkpoint './results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/model_best.pth.tar'
=> loaded checkpoint './results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/model_best.pth.tar' (epoch 34)
Namespace(New_classifier_model='ADM', adam=False, aug_shot_num=20, batch_size=64, beta1=0.5, clamp_lower=-0.01, clamp_upper=0.01, classifier_model='ADM', cosine=True, cuda=True, data_name='CubBird_2011', dataset_dir='/home/liwenbin/Datasets/CUB_200_2011_FewShot', encoder_model='Conv64F_Li', episodeSize=1, episode_test_num=1000, episode_train_num=10000, episode_val_num=1000, epochs=40, imageSize=84, lr=0.01, lr_decay_epochs=[60, 80], lr_decay_rate=0.1, mode='test', momentum=0.9, nc=3, neighbor_k=3, ngpu=1, outf='./results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/', print_freq=100, query_num=15, resume='./results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/', shot_num=1, start_epoch=0, test_aug=False, testepisodeSize=1, train_aug=True, train_classes=64, way_num=5, weight_decay=0.0005, workers=4)
Model_with_reused_Encoder(
  (model): Fewshot_model(
    (features): Conv64F_Li(
      (features): Sequential(
        (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
        (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): LeakyReLU(negative_slope=0.2, inplace=True)
        (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (10): LeakyReLU(negative_slope=0.2, inplace=True)
        (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (13): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (classifier): ADM_Metric(
      (Norm_layer): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (FC_layer): Conv1d(1, 1, kernel_size=(2,), stride=(1,), dilation=(5,), bias=False)
    )
  )
  (features): Sequential(
    (0): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
    )
  )
  (classifier): ADM_Metric(
    (Norm_layer): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (FC_layer): Conv1d(1, 1, kernel_size=(2,), stride=(1,), dilation=(5,), bias=False)
  )
)
==================== The 0-th round ====================
========================================== Start Test ==========================================

=> loading checkpoint './results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/model_best.pth.tar'
=> loaded checkpoint './results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/model_best.pth.tar' (epoch 34)
Namespace(New_classifier_model='ADM', adam=False, aug_shot_num=20, batch_size=64, beta1=0.5, clamp_lower=-0.01, clamp_upper=0.01, classifier_model='ADM', cosine=True, cuda=True, data_name='CubBird_2011', dataset_dir='/home/liwenbin/Datasets/CUB_200_2011_FewShot', encoder_model='Conv64F_Li', episodeSize=1, episode_test_num=1000, episode_train_num=10000, episode_val_num=1000, epochs=40, imageSize=84, lr=0.01, lr_decay_epochs=[60, 80], lr_decay_rate=0.1, mode='test', momentum=0.9, nc=3, neighbor_k=3, ngpu=1, outf='./results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/', print_freq=100, query_num=15, resume='./results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/', shot_num=1, start_epoch=0, test_aug=False, testepisodeSize=1, train_aug=True, train_classes=64, way_num=5, weight_decay=0.0005, workers=4)
==================== The 0-th round ====================
Test-(34): [100/1000]	Time 0.082 (0.152)	Loss 1.426 (1.509)	Prec@1 57.333 (45.241)
Test-(34): [200/1000]	Time 0.074 (0.146)	Loss 1.987 (1.538)	Prec@1 40.000 (44.425)
Test-(34): [300/1000]	Time 0.050 (0.142)	Loss 1.416 (1.536)	Prec@1 45.333 (44.190)
Test-(34): [400/1000]	Time 0.091 (0.143)	Loss 1.155 (1.546)	Prec@1 48.000 (43.973)
Test-(34): [500/1000]	Time 0.094 (0.142)	Loss 1.615 (1.557)	Prec@1 40.000 (43.718)
Test-(34): [600/1000]	Time 0.074 (0.141)	Loss 1.634 (1.553)	Prec@1 38.667 (43.647)
========================================== Start Test ==========================================

=> loading checkpoint './results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/model_best.pth.tar'
=> loaded checkpoint './results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot/model_best.pth.tar' (epoch 39)
Namespace(adam=False, aug_shot_num=20, beta1=0.5, clamp_lower=-0.01, clamp_upper=0.01, classifier_model='ADM', cosine=True, cuda=True, current_epoch=39, data_name='miniImageNet', dataset_dir='/home/liwenbin/Datasets/miniImageNet--ravi', encoder_model='Conv64F_Li', episodeSize=1, episode_test_num=1000, episode_train_num=10000, episode_val_num=1000, epochs=40, imageSize=84, lr=0.01, lr_decay_epochs=[60, 80], lr_decay_rate=0.1, mode='train', momentum=0.9, nc=3, neighbor_k=3, ngpu=1, outf='./results/Metric_Based_FSL/ADM_Conv64F_Li_Epoch_40_miniImageNet_84_84_5Way_1Shot', print_freq=100, query_num=10, resume='', shot_num=1, start_epoch=0, test_aug=False, testepisodeSize=1, train_aug=True, way_num=5, weight_decay=0.0005, workers=8)
Fewshot_model(
  (features): Conv64F_Li(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
    )
  )
  (classifier): ADM_Metric(
    (Norm_layer): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (FC_layer): Conv1d(1, 1, kernel_size=(2,), stride=(1,), dilation=(5,), bias=False)
  )
)
==================== The 0-th round ====================
Val-(39): [100/1000]	Time 0.52 (0.53)	Loss 1.16 (1.28)	Prec@1 56.00 (52.36)
Val-(39): [200/1000]	Time 0.53 (0.52)	Loss 1.01 (1.30)	Prec@1 58.00 (51.77)
Val-(39): [300/1000]	Time 0.53 (0.52)	Loss 1.48 (1.30)	Prec@1 48.00 (51.46)
Val-(39): [400/1000]	Time 0.53 (0.53)	Loss 1.18 (1.29)	Prec@1 64.00 (51.93)
Val-(39): [500/1000]	Time 0.54 (0.53)	Loss 1.18 (1.29)	Prec@1 54.00 (51.98)
Val-(39): [600/1000]	Time 0.53 (0.53)	Loss 1.22 (1.28)	Prec@1 54.00 (52.09)
Val-(39): [700/1000]	Time 0.54 (0.53)	Loss 1.08 (1.27)	Prec@1 52.00 (52.32)
Val-(39): [800/1000]	Time 0.53 (0.53)	Loss 1.28 (1.27)	Prec@1 44.00 (52.57)
Val-(39): [900/1000]	Time 0.55 (0.53)	Loss 1.59 (1.27)	Prec@1 46.00 (52.50)
 * Prec@1 52.72 Best_prec1 52.06
Test accuracy: 52.722000 h: 0.637989 

==================== The 1-th round ====================
Val-(39): [100/1000]	Time 0.54 (0.54)	Loss 0.75 (1.26)	Prec@1 72.00 (51.27)
Val-(39): [200/1000]	Time 0.52 (0.54)	Loss 1.09 (1.25)	Prec@1 52.00 (52.20)
Val-(39): [300/1000]	Time 0.52 (0.54)	Loss 0.93 (1.26)	Prec@1 74.00 (51.88)
Val-(39): [400/1000]	Time 0.55 (0.54)	Loss 1.11 (1.26)	Prec@1 62.00 (52.05)
Val-(39): [500/1000]	Time 0.53 (0.53)	Loss 1.05 (1.26)	Prec@1 56.00 (52.10)
Val-(39): [600/1000]	Time 0.53 (0.53)	Loss 0.98 (1.26)	Prec@1 62.00 (52.37)
Val-(39): [700/1000]	Time 0.56 (0.53)	Loss 1.35 (1.26)	Prec@1 44.00 (52.15)
Val-(39): [800/1000]	Time 0.55 (0.54)	Loss 1.17 (1.26)	Prec@1 52.00 (52.01)
Val-(39): [900/1000]	Time 0.57 (0.54)	Loss 1.57 (1.27)	Prec@1 24.00 (51.90)
 * Prec@1 51.88 Best_prec1 52.06
Test accuracy: 51.882000 h: 0.649400 

==================== The 2-th round ====================
Val-(39): [100/1000]	Time 0.31 (0.31)	Loss 1.22 (1.28)	Prec@1 60.00 (52.50)
Val-(39): [200/1000]	Time 0.31 (0.31)	Loss 0.83 (1.28)	Prec@1 68.00 (52.20)
Val-(39): [300/1000]	Time 0.33 (0.27)	Loss 1.45 (1.25)	Prec@1 42.00 (53.00)
Val-(39): [400/1000]	Time 0.30 (0.28)	Loss 1.22 (1.26)	Prec@1 54.00 (52.86)
Val-(39): [500/1000]	Time 0.31 (0.28)	Loss 1.11 (1.26)	Prec@1 46.00 (52.46)
Val-(39): [600/1000]	Time 0.03 (0.25)	Loss 2.30 (1.25)	Prec@1 44.00 (52.52)
Val-(39): [700/1000]	Time 0.54 (0.27)	Loss 1.03 (1.25)	Prec@1 54.00 (52.44)
Val-(39): [800/1000]	Time 0.55 (0.30)	Loss 1.30 (1.25)	Prec@1 36.00 (52.48)
Val-(39): [900/1000]	Time 0.55 (0.33)	Loss 1.32 (1.25)	Prec@1 42.00 (52.44)
 * Prec@1 52.43 Best_prec1 52.06
Test accuracy: 52.425999 h: 0.673413 

==================== The 3-th round ====================
Val-(39): [100/1000]	Time 0.50 (0.54)	Loss 1.53 (1.24)	Prec@1 46.00 (52.48)
Val-(39): [200/1000]	Time 0.55 (0.54)	Loss 1.42 (1.27)	Prec@1 44.00 (52.08)
Val-(39): [300/1000]	Time 0.51 (0.54)	Loss 1.31 (1.29)	Prec@1 48.00 (51.46)
Val-(39): [400/1000]	Time 0.54 (0.54)	Loss 1.33 (1.28)	Prec@1 46.00 (52.21)
Val-(39): [500/1000]	Time 0.54 (0.53)	Loss 1.21 (1.27)	Prec@1 42.00 (52.28)
Val-(39): [600/1000]	Time 0.55 (0.53)	Loss 0.52 (1.26)	Prec@1 86.00 (52.51)
Val-(39): [700/1000]	Time 0.45 (0.53)	Loss 1.32 (1.26)	Prec@1 56.00 (52.43)
Val-(39): [800/1000]	Time 0.47 (0.52)	Loss 1.21 (1.26)	Prec@1 52.00 (52.41)
Val-(39): [900/1000]	Time 0.49 (0.52)	Loss 1.01 (1.27)	Prec@1 62.00 (52.27)
 * Prec@1 52.46 Best_prec1 52.06
Test accuracy: 52.462002 h: 0.635045 

==================== The 4-th round ====================
Val-(39): [100/1000]	Time 0.50 (0.51)	Loss 1.16 (1.27)	Prec@1 60.00 (51.94)
Val-(39): [200/1000]	Time 0.52 (0.51)	Loss 1.33 (1.26)	Prec@1 40.00 (52.09)
Val-(39): [300/1000]	Time 0.49 (0.51)	Loss 1.55 (1.27)	Prec@1 36.00 (51.55)
Val-(39): [400/1000]	Time 0.52 (0.51)	Loss 1.46 (1.26)	Prec@1 48.00 (51.98)
Val-(39): [500/1000]	Time 0.50 (0.51)	Loss 1.40 (1.26)	Prec@1 46.00 (51.98)
Val-(39): [600/1000]	Time 0.53 (0.51)	Loss 1.08 (1.26)	Prec@1 56.00 (52.01)
Val-(39): [700/1000]	Time 0.50 (0.51)	Loss 1.12 (1.25)	Prec@1 54.00 (51.96)
Val-(39): [800/1000]	Time 0.50 (0.51)	Loss 1.44 (1.25)	Prec@1 46.00 (52.11)
Val-(39): [900/1000]	Time 0.51 (0.50)	Loss 1.02 (1.25)	Prec@1 56.00 (52.21)
 * Prec@1 52.19 Best_prec1 52.06
Test accuracy: 52.194000 h: 0.638241 

Mean_accuracy: 52.337200 h: 0.646818
===================================== Test is END =====================================

